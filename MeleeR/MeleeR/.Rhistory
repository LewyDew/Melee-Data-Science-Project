}
}
    head(lDataFrames[[i]])
## exclude sqlite_sequence (contains table information)
    head(lDataFrames[[i]])
    head(lDataFrames[[i]])
nrow(lDataFrames)
nrow(lDataFrames)
## list all tables
nrow(lDataFrames)
library("RSQLite") ## connect to db con <- dbConnect(drv = RSQLite::SQLite(), dbname = "database.sqlite") ## list all tables tables <- dbListTables(con) ## exclude sqlite_sequence (contains table information) tables <- tables[tables != "sqlite_sequence"] lDataFrames <- vector("list", length = length(tables)) ## create a data.frame for each table for (i in seq(along = tables)) {     lDataFrames[[i]] <- dbGetQuery(conn = con, statement = paste("SELECT * FROM '", tables[[i]], "'", sep = ""))     head(lDataFrames[[i]]) } nrow(lDataFrames)
source("D:/Desktop/Melee Data science project/MeleeR/MeleeR/Script.R", encoding = "Windows-1252")
library("RSQLite") ## connect to db con <- dbConnect(drv = RSQLite::SQLite(), dbname = "database.sqlite") ## list all tables tables <- dbListTables(con) ## exclude sqlite_sequence (contains table information) tables <- tables[tables != "sqlite_sequence"] lDataFrames <- vector("list", length = length(tables)) ## create a data.frame for each table for (i in seq(along = tables)) {     lDataFrames[[i]] <- dbGetQuery(conn = con, statement = paste("SELECT * FROM '", tables[[i]], "'", sep = ""))     head(lDataFrames[[i]]) } nrow(lDataFrames)
library("RSQLite") ## connect to db con <- dbConnect(drv = RSQLite::SQLite(), dbname = "database") ## list all tables tables <- dbListTables(con) ## exclude sqlite_sequence (contains table information) tables <- tables[tables != "sqlite_sequence"] lDataFrames <- vector("list", length = length(tables)) ## create a data.frame for each table for (i in seq(along = tables)) {     lDataFrames[[i]] <- dbGetQuery(conn = con, statement = paste("SELECT * FROM '", tables[[i]], "'", sep = ""))     head(lDataFrames[[i]]) } nrow(lDataFrames)
library("RSQLite") ## connect to db con <- dbConnect(drv = RSQLite::SQLite(), dbname = "database.sqlite") ## list all tables tables <- dbListTables(con) ## exclude sqlite_sequence (contains table information) tables <- tables[tables != "sqlite_sequence"] lDataFrames <- vector("list", length = length(tables)) ## create a data.frame for each table for (i in seq(along = tables)) {     lDataFrames[[i]] <- dbGetQuery(conn = con, statement = paste("SELECT * FROM '", tables[[i]], "'", sep = ""))     head(lDataFrames[[i]]) } nrow(lDataFrames)
library(shiny) runApp()
library("RSQLite") ## connect to db con <- dbConnect(drv = RSQLite::SQLite(), dbname = "database.sqlite") ## list all tables tables <- dbListTables(con) ## exclude sqlite_sequence (contains table information) tables <- tables[tables != "sqlite_sequence"] lDataFrames <- vector("list", length = length(tables)) ## create a data.frame for each table for (i in seq(along = tables)) {     lDataFrames[[i]] <- dbGetQuery(conn = con, statement = paste("SELECT * FROM '", tables[[i]], "'", sep = ""))     head(lDataFrames[[i]]) } nrow(lDataFrames)
library("RSQLite") ## connect to db con <- dbConnect(drv = RSQLite::SQLite(), dbname = "database.sqlite") ## list all tables tables <- dbListTables(con) ## exclude sqlite_sequence (contains table information) tables <- tables[tables != "sqlite_sequence"] lDataFrames <- vector("list", length = length(tables)) ## create a data.frame for each table for (i in seq(along = tables)) {     lDataFrames[[i]] <- dbGetQuery(conn = con, statement = paste("SELECT * FROM '", tables[[i]], "'", sep = ""))     head(lDataFrames[[i]]) } nrow(lDataFrames)
library("RSQLite") ## connect to db con <- dbConnect(drv = RSQLite::SQLite(), dbname = "database.sqlite") dbListTables(con) ## list all tables tables <- dbListTables(con) ## exclude sqlite_sequence (contains table information) tables <- tables[tables != "sqlite_sequence"] lDataFrames <- vector("list", length = length(tables)) ## create a data.frame for each table for (i in seq(along = tables)) {     lDataFrames[[i]] <- dbGetQuery(conn = con, statement = paste("SELECT * FROM '", tables[[i]], "'", sep = ""))     head(lDataFrames[[i]]) } nrow(lDataFrames)
library("RSQLite") ## connect to db con <- dbConnect(drv = RSQLite::SQLite(), dbname = "database.sqlite") dbListTables(con) ## list all tables tables <- dbListTables(con) ## exclude sqlite_sequence (contains table information) tables <- tables[tables != "sqlite_sequence"] lDataFrames <- vector("list", length = length(tables)) ## create a data.frame for each table for (i in seq(along = tables)) {     lDataFrames[[i]] <- dbGetQuery(conn = con, statement = paste("SELECT * FROM '", tables[[i]], "'", sep = ""))     head(lDataFrames[[i]]) }
library("RSQLite") ## connect to db con <- dbConnect(drv = RSQLite::SQLite(), dbname = "database.sqlite") dbListTables(con) ## list all tables tables <- dbListTables(con) ## exclude sqlite_sequence (contains table information) tables <- tables[tables != "sqlite_sequence"] lDataFrames <- vector("list", length = length(tables)) ## create a data.frame for each table for (i in seq(along = tables)) {     lDataFrames[[i]] <- dbGetQuery(conn = con, statement = paste("SELECT * FROM '", tables[[i]], "'", sep = "")) }
head(lDataFrames[2])
head(lDataFrames[[2]])
head(lDataFrames[[1]])
library("RSQLite") ## connect to db con <- dbConnect(drv = RSQLite::SQLite(), dbname = "database.sqlite") dbListTables(con) ## list all tables tables <- dbListTables(con) ## exclude sqlite_sequence (contains table information) tables <- tables[tables != "sqlite_sequence"] lDataFrames <- vector("list", length = length(tables)) ## create a data.frame for each table for (i in seq(along = tables)) {     lDataFrames[[i]] <- dbGetQuery(conn = con, statement = paste("SELECT * FROM '", tables[[i]], "'", sep = ""))     head(lDataFrames[[i]]) }
head(lDataFrames[[3]])
head(lDataFrames[[4]])
head(lDataFrames[[5]])
